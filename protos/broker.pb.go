// Code generated by protoc-gen-go.
// source: protos/broker.proto
// DO NOT EDIT!

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	protos/broker.proto

It has these top-level messages:
	InstrumentListReq
	InstrumentListResp
	PriceListReq
	PriceListResp
	StreamPricesReq
	AccountListReq
	AccountListResp
	AccountInfoReq
	AccountInfoResp
	OrderListReq
	OrderListResp
	OrderCreationReq
	OrderCreationResp
	Quote
	Empty
	AuthToken
	Instrument
	Account
	AccountInfo
	Order
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InstrumentListReq struct {
	Token     *AuthToken `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	AccountId string     `protobuf:"bytes,2,opt,name=accountId" json:"accountId,omitempty"`
}

func (m *InstrumentListReq) Reset()                    { *m = InstrumentListReq{} }
func (m *InstrumentListReq) String() string            { return proto.CompactTextString(m) }
func (*InstrumentListReq) ProtoMessage()               {}
func (*InstrumentListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *InstrumentListReq) GetToken() *AuthToken {
	if m != nil {
		return m.Token
	}
	return nil
}

type InstrumentListResp struct {
	Instruments []*Instrument `protobuf:"bytes,1,rep,name=instruments" json:"instruments,omitempty"`
}

func (m *InstrumentListResp) Reset()                    { *m = InstrumentListResp{} }
func (m *InstrumentListResp) String() string            { return proto.CompactTextString(m) }
func (*InstrumentListResp) ProtoMessage()               {}
func (*InstrumentListResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InstrumentListResp) GetInstruments() []*Instrument {
	if m != nil {
		return m.Instruments
	}
	return nil
}

type PriceListReq struct {
	Token        *AuthToken `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	InstrumentId []string   `protobuf:"bytes,2,rep,name=instrumentId" json:"instrumentId,omitempty"`
}

func (m *PriceListReq) Reset()                    { *m = PriceListReq{} }
func (m *PriceListReq) String() string            { return proto.CompactTextString(m) }
func (*PriceListReq) ProtoMessage()               {}
func (*PriceListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PriceListReq) GetToken() *AuthToken {
	if m != nil {
		return m.Token
	}
	return nil
}

type PriceListResp struct {
	Quotes []*Quote `protobuf:"bytes,1,rep,name=quotes" json:"quotes,omitempty"`
}

func (m *PriceListResp) Reset()                    { *m = PriceListResp{} }
func (m *PriceListResp) String() string            { return proto.CompactTextString(m) }
func (*PriceListResp) ProtoMessage()               {}
func (*PriceListResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PriceListResp) GetQuotes() []*Quote {
	if m != nil {
		return m.Quotes
	}
	return nil
}

type StreamPricesReq struct {
	Token        *AuthToken `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	InstrumentId string     `protobuf:"bytes,2,opt,name=instrumentId" json:"instrumentId,omitempty"`
}

func (m *StreamPricesReq) Reset()                    { *m = StreamPricesReq{} }
func (m *StreamPricesReq) String() string            { return proto.CompactTextString(m) }
func (*StreamPricesReq) ProtoMessage()               {}
func (*StreamPricesReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *StreamPricesReq) GetToken() *AuthToken {
	if m != nil {
		return m.Token
	}
	return nil
}

type AccountListReq struct {
	Token *AuthToken `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *AccountListReq) Reset()                    { *m = AccountListReq{} }
func (m *AccountListReq) String() string            { return proto.CompactTextString(m) }
func (*AccountListReq) ProtoMessage()               {}
func (*AccountListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AccountListReq) GetToken() *AuthToken {
	if m != nil {
		return m.Token
	}
	return nil
}

type AccountListResp struct {
	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
}

func (m *AccountListResp) Reset()                    { *m = AccountListResp{} }
func (m *AccountListResp) String() string            { return proto.CompactTextString(m) }
func (*AccountListResp) ProtoMessage()               {}
func (*AccountListResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AccountListResp) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type AccountInfoReq struct {
	Token     *AuthToken `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	AccountId string     `protobuf:"bytes,2,opt,name=accountId" json:"accountId,omitempty"`
}

func (m *AccountInfoReq) Reset()                    { *m = AccountInfoReq{} }
func (m *AccountInfoReq) String() string            { return proto.CompactTextString(m) }
func (*AccountInfoReq) ProtoMessage()               {}
func (*AccountInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AccountInfoReq) GetToken() *AuthToken {
	if m != nil {
		return m.Token
	}
	return nil
}

type AccountInfoResp struct {
	Info *AccountInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *AccountInfoResp) Reset()                    { *m = AccountInfoResp{} }
func (m *AccountInfoResp) String() string            { return proto.CompactTextString(m) }
func (*AccountInfoResp) ProtoMessage()               {}
func (*AccountInfoResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AccountInfoResp) GetInfo() *AccountInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type OrderListReq struct {
	Token     *AuthToken `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	AccountId string     `protobuf:"bytes,2,opt,name=accountId" json:"accountId,omitempty"`
}

func (m *OrderListReq) Reset()                    { *m = OrderListReq{} }
func (m *OrderListReq) String() string            { return proto.CompactTextString(m) }
func (*OrderListReq) ProtoMessage()               {}
func (*OrderListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *OrderListReq) GetToken() *AuthToken {
	if m != nil {
		return m.Token
	}
	return nil
}

type OrderListResp struct {
	Orders []*Order `protobuf:"bytes,1,rep,name=orders" json:"orders,omitempty"`
}

func (m *OrderListResp) Reset()                    { *m = OrderListResp{} }
func (m *OrderListResp) String() string            { return proto.CompactTextString(m) }
func (*OrderListResp) ProtoMessage()               {}
func (*OrderListResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *OrderListResp) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type OrderCreationReq struct {
	Token        *AuthToken `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	InstrumentId string     `protobuf:"bytes,2,opt,name=instrumentId" json:"instrumentId,omitempty"`
	Units        int32      `protobuf:"varint,3,opt,name=units" json:"units,omitempty"`
	Side         string     `protobuf:"bytes,4,opt,name=side" json:"side,omitempty"`
	Type         string     `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
}

func (m *OrderCreationReq) Reset()                    { *m = OrderCreationReq{} }
func (m *OrderCreationReq) String() string            { return proto.CompactTextString(m) }
func (*OrderCreationReq) ProtoMessage()               {}
func (*OrderCreationReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *OrderCreationReq) GetToken() *AuthToken {
	if m != nil {
		return m.Token
	}
	return nil
}

type OrderCreationResp struct {
	InstrumentId string  `protobuf:"bytes,1,opt,name=instrumentId" json:"instrumentId,omitempty"`
	Price        float64 `protobuf:"fixed64,2,opt,name=price" json:"price,omitempty"`
	Time         string  `protobuf:"bytes,3,opt,name=time" json:"time,omitempty"`
	Id           string  `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
}

func (m *OrderCreationResp) Reset()                    { *m = OrderCreationResp{} }
func (m *OrderCreationResp) String() string            { return proto.CompactTextString(m) }
func (*OrderCreationResp) ProtoMessage()               {}
func (*OrderCreationResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type Quote struct {
	InstrumentId string  `protobuf:"bytes,1,opt,name=instrumentId" json:"instrumentId,omitempty"`
	Bid          float64 `protobuf:"fixed64,2,opt,name=bid" json:"bid,omitempty"`
	Ask          float64 `protobuf:"fixed64,3,opt,name=ask" json:"ask,omitempty"`
	Time         string  `protobuf:"bytes,4,opt,name=time" json:"time,omitempty"`
	Status       string  `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
}

func (m *Quote) Reset()                    { *m = Quote{} }
func (m *Quote) String() string            { return proto.CompactTextString(m) }
func (*Quote) ProtoMessage()               {}
func (*Quote) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

type AuthToken struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *AuthToken) Reset()                    { *m = AuthToken{} }
func (m *AuthToken) String() string            { return proto.CompactTextString(m) }
func (*AuthToken) ProtoMessage()               {}
func (*AuthToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type Instrument struct {
	InstrumentId  string `protobuf:"bytes,1,opt,name=instrumentId" json:"instrumentId,omitempty"`
	DisplayName   string `protobuf:"bytes,2,opt,name=displayName" json:"displayName,omitempty"`
	Pip           string `protobuf:"bytes,3,opt,name=pip" json:"pip,omitempty"`
	MaxTradeUnits int32  `protobuf:"varint,4,opt,name=maxTradeUnits" json:"maxTradeUnits,omitempty"`
}

func (m *Instrument) Reset()                    { *m = Instrument{} }
func (m *Instrument) String() string            { return proto.CompactTextString(m) }
func (*Instrument) ProtoMessage()               {}
func (*Instrument) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type Account struct {
	Id         string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name       string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Currency   string  `protobuf:"bytes,3,opt,name=currency" json:"currency,omitempty"`
	MarginRate float64 `protobuf:"fixed64,4,opt,name=marginRate" json:"marginRate,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

type AccountInfo struct {
	Id           string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name         string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Currency     string  `protobuf:"bytes,3,opt,name=currency" json:"currency,omitempty"`
	MarginRate   float64 `protobuf:"fixed64,4,opt,name=margin_rate,json=marginRate" json:"margin_rate,omitempty"`
	Balance      float64 `protobuf:"fixed64,5,opt,name=balance" json:"balance,omitempty"`
	UnrealizedPl float64 `protobuf:"fixed64,6,opt,name=unrealized_pl,json=unrealizedPl" json:"unrealized_pl,omitempty"`
	RealizedPl   float64 `protobuf:"fixed64,7,opt,name=realized_pl,json=realizedPl" json:"realized_pl,omitempty"`
	MarginUsed   float64 `protobuf:"fixed64,8,opt,name=margin_used,json=marginUsed" json:"margin_used,omitempty"`
	MarginAvail  float64 `protobuf:"fixed64,9,opt,name=margin_avail,json=marginAvail" json:"margin_avail,omitempty"`
	OpenTrades   float64 `protobuf:"fixed64,10,opt,name=open_trades,json=openTrades" json:"open_trades,omitempty"`
	OpenOrders   float64 `protobuf:"fixed64,11,opt,name=open_orders,json=openOrders" json:"open_orders,omitempty"`
}

func (m *AccountInfo) Reset()                    { *m = AccountInfo{} }
func (m *AccountInfo) String() string            { return proto.CompactTextString(m) }
func (*AccountInfo) ProtoMessage()               {}
func (*AccountInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type Order struct {
	Id           string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	InstrumentId string  `protobuf:"bytes,2,opt,name=instrumentId" json:"instrumentId,omitempty"`
	Units        int32   `protobuf:"varint,3,opt,name=units" json:"units,omitempty"`
	Side         string  `protobuf:"bytes,4,opt,name=side" json:"side,omitempty"`
	Type         string  `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	Time         string  `protobuf:"bytes,6,opt,name=time" json:"time,omitempty"`
	Price        float64 `protobuf:"fixed64,7,opt,name=price" json:"price,omitempty"`
	TakeProfit   float64 `protobuf:"fixed64,8,opt,name=take_profit,json=takeProfit" json:"take_profit,omitempty"`
	StopLoss     float64 `protobuf:"fixed64,9,opt,name=stop_loss,json=stopLoss" json:"stop_loss,omitempty"`
	Expiry       string  `protobuf:"bytes,10,opt,name=expiry" json:"expiry,omitempty"`
	UpperBound   float64 `protobuf:"fixed64,11,opt,name=upper_bound,json=upperBound" json:"upper_bound,omitempty"`
	LowerBound   float64 `protobuf:"fixed64,12,opt,name=lower_bound,json=lowerBound" json:"lower_bound,omitempty"`
	TrailingStop float64 `protobuf:"fixed64,13,opt,name=trailing_stop,json=trailingStop" json:"trailing_stop,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func init() {
	proto.RegisterType((*InstrumentListReq)(nil), "protos.InstrumentListReq")
	proto.RegisterType((*InstrumentListResp)(nil), "protos.InstrumentListResp")
	proto.RegisterType((*PriceListReq)(nil), "protos.PriceListReq")
	proto.RegisterType((*PriceListResp)(nil), "protos.PriceListResp")
	proto.RegisterType((*StreamPricesReq)(nil), "protos.StreamPricesReq")
	proto.RegisterType((*AccountListReq)(nil), "protos.AccountListReq")
	proto.RegisterType((*AccountListResp)(nil), "protos.AccountListResp")
	proto.RegisterType((*AccountInfoReq)(nil), "protos.AccountInfoReq")
	proto.RegisterType((*AccountInfoResp)(nil), "protos.AccountInfoResp")
	proto.RegisterType((*OrderListReq)(nil), "protos.OrderListReq")
	proto.RegisterType((*OrderListResp)(nil), "protos.OrderListResp")
	proto.RegisterType((*OrderCreationReq)(nil), "protos.OrderCreationReq")
	proto.RegisterType((*OrderCreationResp)(nil), "protos.OrderCreationResp")
	proto.RegisterType((*Quote)(nil), "protos.Quote")
	proto.RegisterType((*Empty)(nil), "protos.Empty")
	proto.RegisterType((*AuthToken)(nil), "protos.AuthToken")
	proto.RegisterType((*Instrument)(nil), "protos.Instrument")
	proto.RegisterType((*Account)(nil), "protos.Account")
	proto.RegisterType((*AccountInfo)(nil), "protos.AccountInfo")
	proto.RegisterType((*Order)(nil), "protos.Order")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Broker service

type BrokerClient interface {
	GetInstrumentList(ctx context.Context, in *InstrumentListReq, opts ...grpc.CallOption) (*InstrumentListResp, error)
	GetPrices(ctx context.Context, in *PriceListReq, opts ...grpc.CallOption) (*PriceListResp, error)
	StreamPrices(ctx context.Context, in *StreamPricesReq, opts ...grpc.CallOption) (Broker_StreamPricesClient, error)
	GetAccounts(ctx context.Context, in *AccountListReq, opts ...grpc.CallOption) (*AccountListResp, error)
	GetAccountInfo(ctx context.Context, in *AccountInfoReq, opts ...grpc.CallOption) (*AccountInfoResp, error)
	GetOrders(ctx context.Context, in *OrderListReq, opts ...grpc.CallOption) (*OrderListResp, error)
	CreateOrder(ctx context.Context, in *OrderCreationReq, opts ...grpc.CallOption) (*OrderCreationResp, error)
}

type brokerClient struct {
	cc *grpc.ClientConn
}

func NewBrokerClient(cc *grpc.ClientConn) BrokerClient {
	return &brokerClient{cc}
}

func (c *brokerClient) GetInstrumentList(ctx context.Context, in *InstrumentListReq, opts ...grpc.CallOption) (*InstrumentListResp, error) {
	out := new(InstrumentListResp)
	err := grpc.Invoke(ctx, "/protos.Broker/GetInstrumentList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerClient) GetPrices(ctx context.Context, in *PriceListReq, opts ...grpc.CallOption) (*PriceListResp, error) {
	out := new(PriceListResp)
	err := grpc.Invoke(ctx, "/protos.Broker/GetPrices", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerClient) StreamPrices(ctx context.Context, in *StreamPricesReq, opts ...grpc.CallOption) (Broker_StreamPricesClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Broker_serviceDesc.Streams[0], c.cc, "/protos.Broker/StreamPrices", opts...)
	if err != nil {
		return nil, err
	}
	x := &brokerStreamPricesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Broker_StreamPricesClient interface {
	Recv() (*Quote, error)
	grpc.ClientStream
}

type brokerStreamPricesClient struct {
	grpc.ClientStream
}

func (x *brokerStreamPricesClient) Recv() (*Quote, error) {
	m := new(Quote)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *brokerClient) GetAccounts(ctx context.Context, in *AccountListReq, opts ...grpc.CallOption) (*AccountListResp, error) {
	out := new(AccountListResp)
	err := grpc.Invoke(ctx, "/protos.Broker/GetAccounts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerClient) GetAccountInfo(ctx context.Context, in *AccountInfoReq, opts ...grpc.CallOption) (*AccountInfoResp, error) {
	out := new(AccountInfoResp)
	err := grpc.Invoke(ctx, "/protos.Broker/GetAccountInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerClient) GetOrders(ctx context.Context, in *OrderListReq, opts ...grpc.CallOption) (*OrderListResp, error) {
	out := new(OrderListResp)
	err := grpc.Invoke(ctx, "/protos.Broker/GetOrders", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerClient) CreateOrder(ctx context.Context, in *OrderCreationReq, opts ...grpc.CallOption) (*OrderCreationResp, error) {
	out := new(OrderCreationResp)
	err := grpc.Invoke(ctx, "/protos.Broker/CreateOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Broker service

type BrokerServer interface {
	GetInstrumentList(context.Context, *InstrumentListReq) (*InstrumentListResp, error)
	GetPrices(context.Context, *PriceListReq) (*PriceListResp, error)
	StreamPrices(*StreamPricesReq, Broker_StreamPricesServer) error
	GetAccounts(context.Context, *AccountListReq) (*AccountListResp, error)
	GetAccountInfo(context.Context, *AccountInfoReq) (*AccountInfoResp, error)
	GetOrders(context.Context, *OrderListReq) (*OrderListResp, error)
	CreateOrder(context.Context, *OrderCreationReq) (*OrderCreationResp, error)
}

func RegisterBrokerServer(s *grpc.Server, srv BrokerServer) {
	s.RegisterService(&_Broker_serviceDesc, srv)
}

func _Broker_GetInstrumentList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstrumentListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServer).GetInstrumentList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Broker/GetInstrumentList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServer).GetInstrumentList(ctx, req.(*InstrumentListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Broker_GetPrices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PriceListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServer).GetPrices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Broker/GetPrices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServer).GetPrices(ctx, req.(*PriceListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Broker_StreamPrices_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamPricesReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BrokerServer).StreamPrices(m, &brokerStreamPricesServer{stream})
}

type Broker_StreamPricesServer interface {
	Send(*Quote) error
	grpc.ServerStream
}

type brokerStreamPricesServer struct {
	grpc.ServerStream
}

func (x *brokerStreamPricesServer) Send(m *Quote) error {
	return x.ServerStream.SendMsg(m)
}

func _Broker_GetAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServer).GetAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Broker/GetAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServer).GetAccounts(ctx, req.(*AccountListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Broker_GetAccountInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServer).GetAccountInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Broker/GetAccountInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServer).GetAccountInfo(ctx, req.(*AccountInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Broker_GetOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServer).GetOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Broker/GetOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServer).GetOrders(ctx, req.(*OrderListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Broker_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderCreationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Broker/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServer).CreateOrder(ctx, req.(*OrderCreationReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Broker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Broker",
	HandlerType: (*BrokerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInstrumentList",
			Handler:    _Broker_GetInstrumentList_Handler,
		},
		{
			MethodName: "GetPrices",
			Handler:    _Broker_GetPrices_Handler,
		},
		{
			MethodName: "GetAccounts",
			Handler:    _Broker_GetAccounts_Handler,
		},
		{
			MethodName: "GetAccountInfo",
			Handler:    _Broker_GetAccountInfo_Handler,
		},
		{
			MethodName: "GetOrders",
			Handler:    _Broker_GetOrders_Handler,
		},
		{
			MethodName: "CreateOrder",
			Handler:    _Broker_CreateOrder_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamPrices",
			Handler:       _Broker_StreamPrices_Handler,
			ServerStreams: true,
		},
	},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("protos/broker.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 936 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x56, 0x6d, 0x8f, 0x1b, 0x35,
	0x10, 0xee, 0x5e, 0xde, 0x67, 0x93, 0xbb, 0xc6, 0x2d, 0xed, 0x36, 0x20, 0x68, 0x0d, 0xa8, 0x48,
	0x48, 0x05, 0x15, 0x84, 0x44, 0x3f, 0x20, 0xae, 0x05, 0xa1, 0x43, 0x27, 0x7a, 0x6c, 0x7b, 0x42,
	0x02, 0x89, 0xc8, 0xc9, 0xba, 0xc5, 0xba, 0xcd, 0xee, 0xde, 0xda, 0x5b, 0x1a, 0xf8, 0x07, 0xfc,
	0x07, 0xfe, 0x15, 0x12, 0x5f, 0xf9, 0x29, 0x8c, 0x5f, 0xf6, 0x2d, 0x49, 0xa5, 0x56, 0xbd, 0x7e,
	0xb3, 0x1f, 0x3f, 0x9e, 0x67, 0x66, 0x3c, 0x63, 0x1b, 0xae, 0x64, 0x79, 0xaa, 0x52, 0xf9, 0xc9,
	0x22, 0x4f, 0xcf, 0x78, 0x7e, 0xc7, 0xcc, 0x48, 0xdf, 0x82, 0xf4, 0x67, 0x98, 0x1e, 0x25, 0x52,
	0xe5, 0xc5, 0x8a, 0x27, 0xea, 0x58, 0x48, 0x15, 0xf2, 0x73, 0x72, 0x1b, 0x7a, 0x0a, 0xb9, 0x49,
	0xe0, 0xdd, 0xf4, 0x3e, 0xf2, 0xef, 0x4e, 0xed, 0x1e, 0x79, 0xe7, 0xb0, 0x50, 0xbf, 0x3d, 0xd6,
	0x0b, 0xa1, 0x5d, 0x27, 0xef, 0xc0, 0x88, 0x2d, 0x97, 0x69, 0x91, 0xa8, 0xa3, 0x28, 0xd8, 0x43,
	0xf2, 0x28, 0xac, 0x01, 0xfa, 0x3d, 0x90, 0x4d, 0xdb, 0x32, 0x23, 0x9f, 0x83, 0x2f, 0x2a, 0x54,
	0xa2, 0x44, 0x07, 0x25, 0x48, 0x29, 0x51, 0x6f, 0x08, 0x9b, 0x34, 0xfa, 0x0b, 0x8c, 0x4f, 0x72,
	0xb1, 0xe4, 0xaf, 0xec, 0x22, 0x85, 0x71, 0x6d, 0xc7, 0x78, 0xd9, 0x41, 0x2f, 0x5b, 0x18, 0xfd,
	0x02, 0x26, 0x0d, 0xe3, 0xe8, 0xe3, 0x87, 0xd0, 0x3f, 0x2f, 0x52, 0xc5, 0x4b, 0xf7, 0x26, 0xa5,
	0xf9, 0x1f, 0x35, 0x1a, 0xba, 0x45, 0xfa, 0x2b, 0x1c, 0x3c, 0x52, 0x39, 0x67, 0x2b, 0xb3, 0x5b,
	0xbe, 0xa6, 0x5f, 0xde, 0x96, 0x5f, 0x5f, 0xc2, 0xfe, 0xa1, 0xcd, 0xe6, 0xab, 0x86, 0x4d, 0xbf,
	0x82, 0x83, 0xd6, 0x56, 0x0c, 0xea, 0x63, 0x18, 0xba, 0xb3, 0x29, 0xc3, 0x3a, 0xa8, 0xb6, 0x5b,
	0x3c, 0xac, 0x08, 0xf4, 0xa7, 0x4a, 0xfa, 0x28, 0x79, 0x92, 0x5e, 0x60, 0x51, 0xdc, 0xab, 0x1c,
	0xb3, 0x86, 0xd1, 0xb1, 0xdb, 0xd0, 0x15, 0x38, 0x76, 0x86, 0xaf, 0x6c, 0x38, 0x65, 0x68, 0x86,
	0x40, 0x4f, 0x61, 0xfc, 0x30, 0x8f, 0x78, 0x7e, 0xc1, 0x75, 0x8a, 0xc7, 0xdf, 0x30, 0x6b, 0x8f,
	0x3f, 0xd5, 0xc0, 0xd6, 0xf1, 0x1b, 0x5a, 0xe8, 0x16, 0xe9, 0xdf, 0x1e, 0x5c, 0x36, 0xc8, 0x03,
	0xac, 0x01, 0x25, 0xd2, 0xe4, 0xa2, 0x0b, 0x80, 0x5c, 0x85, 0x5e, 0x91, 0x08, 0x3c, 0xaf, 0x0e,
	0x2e, 0xf6, 0x42, 0x3b, 0x21, 0x04, 0xba, 0x52, 0x44, 0x3c, 0xe8, 0x9a, 0x1d, 0x66, 0xac, 0x31,
	0xb5, 0xce, 0x78, 0xd0, 0xb3, 0x98, 0x1e, 0xd3, 0x73, 0x98, 0x6e, 0xb8, 0x87, 0xb1, 0x6d, 0xca,
	0x7a, 0xbb, 0x65, 0x33, 0x5d, 0xd1, 0xc6, 0x27, 0x2f, 0xb4, 0x13, 0x23, 0x21, 0x56, 0xdc, 0xf8,
	0xa2, 0x25, 0x70, 0x4c, 0xf6, 0x61, 0x4f, 0x44, 0xce, 0x11, 0x1c, 0xd1, 0x3f, 0xa1, 0x67, 0x5a,
	0xe4, 0xa5, 0x64, 0x2e, 0x43, 0x67, 0x21, 0x22, 0x27, 0xa2, 0x87, 0x1a, 0x61, 0xf2, 0xcc, 0x28,
	0x20, 0x82, 0xc3, 0x4a, 0xb4, 0xdb, 0x10, 0xbd, 0x06, 0x7d, 0xa9, 0x98, 0x2a, 0xa4, 0x8b, 0xd6,
	0xcd, 0xe8, 0x00, 0x7a, 0xdf, 0xae, 0x32, 0xb5, 0xa6, 0xb7, 0x60, 0x54, 0xa5, 0x5b, 0x07, 0xf3,
	0x8c, 0xc5, 0x05, 0x77, 0x2e, 0xd8, 0x09, 0xfd, 0xcb, 0x03, 0xa8, 0xef, 0x9a, 0x97, 0x72, 0xf7,
	0x26, 0xf8, 0x91, 0x90, 0x59, 0xcc, 0xd6, 0x3f, 0xb0, 0x15, 0x77, 0xe7, 0xd5, 0x84, 0xb4, 0xfb,
	0x99, 0xc8, 0x5c, 0x82, 0xf4, 0x90, 0x7c, 0x00, 0x93, 0x15, 0x7b, 0xfe, 0x38, 0x67, 0x11, 0x3f,
	0x35, 0x07, 0xd9, 0x35, 0x07, 0xd9, 0x06, 0xa9, 0x80, 0x81, 0x2b, 0x76, 0x97, 0x50, 0xaf, 0x4c,
	0xa8, 0x8e, 0x3f, 0xa9, 0xd5, 0xcc, 0x98, 0xcc, 0x60, 0xb8, 0x2c, 0xf2, 0x9c, 0x27, 0xcb, 0xb5,
	0xd3, 0xaa, 0xe6, 0xe4, 0x5d, 0x80, 0x15, 0xcb, 0x9f, 0x8a, 0x24, 0x64, 0xca, 0x66, 0xcd, 0x0b,
	0x1b, 0x08, 0xfd, 0x67, 0x0f, 0xfc, 0x46, 0x63, 0xbd, 0xb6, 0xde, 0x7b, 0xe0, 0x5b, 0xeb, 0xf3,
	0x7c, 0xa7, 0x20, 0x09, 0x60, 0xb0, 0x60, 0x31, 0x4b, 0x96, 0xb6, 0x36, 0xbd, 0xb0, 0x9c, 0x92,
	0xf7, 0x61, 0x52, 0x24, 0x58, 0x9a, 0xb1, 0xf8, 0x83, 0x47, 0xf3, 0x2c, 0x0e, 0xfa, 0x66, 0x7d,
	0x5c, 0x83, 0x27, 0xb1, 0xb6, 0xdf, 0xa4, 0x0c, 0xac, 0xfd, 0x36, 0xc1, 0x39, 0x50, 0x48, 0x1e,
	0x05, 0xc3, 0xa6, 0x03, 0xa7, 0x88, 0x90, 0x5b, 0x30, 0x76, 0x04, 0xf6, 0x8c, 0x89, 0x38, 0x18,
	0x19, 0x86, 0xdb, 0x74, 0xa8, 0x21, 0x6d, 0x23, 0xcd, 0x78, 0x32, 0x57, 0xfa, 0x48, 0x64, 0x00,
	0xd6, 0x86, 0x86, 0xcc, 0x21, 0xc9, 0x8a, 0xe0, 0x6e, 0x05, 0xbf, 0x26, 0x3c, 0xb4, 0x57, 0xc1,
	0x7f, 0x7b, 0xd0, 0x33, 0xc3, 0xad, 0x84, 0xbe, 0xf1, 0x36, 0xaf, 0x5a, 0xa4, 0xdf, 0x68, 0x91,
	0xaa, 0x83, 0x07, 0xcd, 0x0e, 0xc6, 0x30, 0x14, 0x3b, 0xe3, 0x73, 0xbc, 0x92, 0x9e, 0x08, 0x55,
	0xe6, 0x4a, 0x43, 0x27, 0x06, 0x21, 0x6f, 0xc3, 0x48, 0xaa, 0x34, 0x9b, 0xc7, 0xa9, 0x94, 0x2e,
	0x51, 0x43, 0x0d, 0x1c, 0xe3, 0x5c, 0xb7, 0x1d, 0x7f, 0x9e, 0x89, 0x7c, 0x6d, 0x12, 0x84, 0x6d,
	0x67, 0x67, 0xda, 0x6a, 0x91, 0x65, 0x3c, 0x9f, 0x2f, 0xb0, 0xaa, 0xa2, 0x32, 0x39, 0x06, 0xba,
	0xaf, 0x11, 0x4d, 0x88, 0xd3, 0xdf, 0x2b, 0xc2, 0xd8, 0x12, 0x0c, 0x64, 0x09, 0x58, 0x09, 0x98,
	0x7a, 0x11, 0x8b, 0xe4, 0xe9, 0x5c, 0xcb, 0x05, 0x13, 0x5b, 0x09, 0x25, 0xf8, 0x08, 0xb1, 0xbb,
	0xff, 0x76, 0xa0, 0x7f, 0xdf, 0x7c, 0x61, 0xc8, 0x31, 0x4c, 0xbf, 0xe3, 0xaa, 0xfd, 0xb7, 0x20,
	0x37, 0xb6, 0xbf, 0x10, 0xee, 0x9d, 0x98, 0xcd, 0x5e, 0xb4, 0x24, 0x33, 0x7a, 0x89, 0xdc, 0x83,
	0x11, 0x5a, 0xb3, 0x4f, 0x38, 0xb9, 0x5a, 0x52, 0x9b, 0xbf, 0x8d, 0xd9, 0x5b, 0x3b, 0x50, 0xb7,
	0x77, 0xdc, 0xfc, 0x01, 0x90, 0xeb, 0x25, 0x71, 0xe3, 0x5f, 0x30, 0x6b, 0xff, 0x20, 0xe8, 0xa5,
	0x4f, 0x3d, 0xf2, 0x35, 0xf8, 0xa8, 0xeb, 0x9a, 0x11, 0xd3, 0xbb, 0xf1, 0xee, 0x95, 0xda, 0xd7,
	0x77, 0xe2, 0x46, 0xfd, 0x01, 0xec, 0xd7, 0x16, 0x4c, 0x3b, 0x5f, 0xdb, 0xf5, 0x78, 0xee, 0x30,
	0x52, 0xbe, 0xbd, 0x55, 0xf8, 0xb6, 0x8e, 0xeb, 0xf0, 0x9b, 0xef, 0x6c, 0x1d, 0x7e, 0xeb, 0x99,
	0xc4, 0xbd, 0xdf, 0x80, 0x6f, 0x1e, 0x17, 0x6e, 0x6b, 0x3f, 0x68, 0xf1, 0x1a, 0xaf, 0xe2, 0xec,
	0xc6, 0x0b, 0x56, 0xb4, 0x95, 0x85, 0xfd, 0x8b, 0x7e, 0xf6, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xf4, 0xd0, 0xe9, 0xbd, 0xa9, 0x0a, 0x00, 0x00,
}
